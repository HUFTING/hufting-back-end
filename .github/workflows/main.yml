# 액션(action) 이름 정의
name: backend CI

# 이벤트(Event) 정의
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  # docker image name
  IMAGE_NAME: hufsting-back-end

# workflow에 레포지토리에 대한 읽기 권한 부여
permissions:
  contents: read

# 작업(Jobs) 목록 정의
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # private key를 통해 sub_module 접근
      - name: Setup SSH key to access private submodule
        run: |
          mkdir -p ~/.ssh
          echo '${{secrets.BACKEND_CONFIG_PRIVATE_KEY}}' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
      # 레포지토리로 체크아웃을 진행
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodule: true
      # submodule 업데이트
      - name: Update config submodule
        shell: bash
        run: |
          git submodule update --init
      # coretto JDK를 통해 웹 어플리케이션 빌드
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "correto"
      # backend application build
      - name: Build with Gradle
        shell: bash
        run: |
          chmod +x gradlew
          ./gradlew build
      # gradle dependencies cached
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # set up env
      - name: Set up env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
      # login to dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # docker image build
      - name: Build and Push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ACCOUNT_NAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.ACCOUNT_NAME }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            
